We will create several packages to group similar classes in the package game.
The packages we will create are Actor, Item, Ground, Action, Behaviour,
EcoPoint.



Dirt, trees and bushes feature:

Create new classes call Dirt & Bush, both inherits from class Ground.
Create a new class called FruitPlant, which is the parent class of tree and bush.
Create a new class call Fruit, inherits from class Item.

To grow from dirt to bush, Dirt will have a method to consider the grounds
next to it and calculate the chances to become a bush. This method returns an
integer. The integer will then be used as a chance for the bush to spawn.
This method is created so that all
dirts can decide to grow or not all by themselves.

Both Tree & Bush may have store one or more Fruit objects. They will have a
method to produce a ripe Fruit object under a certain chance.

Fruit will stores its rotting progress. If the situation is valid in a turn,
the rotting progress will be incremented.



Hungry dinosaurs & Brachiosaur:

Create a new enum call DinosaurGender, and another one called DinosaurSpecies
Create a new class call HerbivoryBehaviour, implements interface Behaviour.
Create a new class call FeedAction, inherits from class Action.
Create a new abstract class called Dinosaur.
Create a new class call Brachiosaur, inherits from actor.

Gender enum contains 2 constant, MALE and FEMALE.

The abstract class Dinosaur will have a function called findFoodSource.
The different types of dinosaurs will have an overridden version of this class.
For Brachiosaur and Stegosaur classes, this method will find a FruitPlant,
whereas for Allosaur, this method will find either a corpse or a Stegosaur.
This method will be called under playTurn, where dinosaurs will move towards
their food source one tile per turn depending on their food levels.


By inheriting the abstract class Dinosaur, every dinosaur will have the same
attributes like maximum food level, current food level,
unconsciousness length and so on. For gender, store either one of the
constants from Gender enum. There are many methods can also be created in the 
abstract class. By doing this, we can avoid lots of duplicated code.

For Brachiosaur, check if it's stepping on a bush every turn. If yes, remove
the bush from the map under 50% chance. As Brachiosaur is the only dinosaur
who will destroy the bush, implement this inside this class.



Breeding:

Create a new class call BreedAction, inherits from class Action.
Create a new class call Egg, inherits from class PortableItem.

The method surroundingMatingPartner will check to see if there are any
dinosaurs of the opposite sex around a certain radius. Whereas the method
findMatingPartner will lead the dinosaur to its mating partner, similar
to the findFoodSource method.

If a dinosaur wanted to breed, it will have a FollowBehaviour to target a
opposite sex dinosaur. Once an opposite sex dinosaur appears next to it, 
BreedAction allows the female dinosaur to mate under a certain chance.

Class Egg will have attributes like dinosaur type and number of turns exist.
This class will also have a method to determine if the egg is ready to
produce a dinosaur, and another method to return a dinosaur object.

For baby dinosaur, since most of the dinosaurs will be a baby at first, we
just need to update the Dinosaur abstract class. Add attributes baby period
and number of baby's turn. Add also a method to change the baby's states to
adult's states when the dinosaur is already adult.



Eco points and purchasing:

Create a new class call EcoPoints, which holds a static variable ecoPoints.
Create new classes call VendingMachine which inherits from ground.
Vending Machines will spawn at the beginning of the game.
MealKit inherits from class Item.
Create a new class call LaserGun, inherits from class WeaponItem.

To use a currency in game, we create EcoPoints for holding only class
attributes and class methods. There will have a class attribute for storing
the amount of points and class methods for adding and subtracting the points.
This class will not be instantiated.

As for the VendingMachine, upon moving onto the same tile as the VendingMachine,
the player will have the option to interact with it. It will appear as a choice
under the player's menu. If the player chooses to interact with it, the VendingMachine
will call a function that will display all items on sale. This function also returns
whatever item the user wishes to purchase and displays a message when there's
insufficient ecoPoints.


Allosaur & Death:

Create a new enum call Status.
Create a new class call Allosaur, inherits from abstract class Dinosaur.
Create a new class called Corpse, which inherits from Ground class.

Status enum contains 2 constants, ALIVE and DEAD. In Dinosaur, store a
status. When a dinosaur die, its status will changed from ALIVE to DEAD.

Allosaur is behaving just like other dinosaurs, so it is better for it to
inherit from the class Dinosaur same as other dinosaurs. To know more about
the abstract class Dinosaur, refer to the explanation for features Hungry
dinosaurs & Brachiosaur.

The only difference is that allosaur's a carnivore, so they will either go
towards a death dinosaur or a living stegosaur. They will have a 
FollowBehaviour to move towards its target, then attack when a valid dinosaur 
is next to it.

There will be a method to check every turn if a dinosaur's conscious or not.
If the amount of turns a dinosaur stays unconscious reaches its max amount,
the removeActor method will be called and a new corpse will be created.

